syntax = "proto3";
package telepresence.daemon;

import "google/protobuf/empty.proto";
import "rpc/common/version.proto";
import "rpc/daemon/iptables.proto";

option go_package = "github.com/telepresenceio/telepresence/rpc/v2/daemon";

// The Daemon service is responsible for managing network overrides and also
// acts as the central point for logging.
service Daemon {
  // Returns version information from the Daemon
  rpc Version(google.protobuf.Empty) returns (telepresence.common.VersionInfo);

  // Returns the current connectivity status
  rpc Status(google.protobuf.Empty) returns (DaemonStatus);

  // Quits (terminates) the service.
  rpc Quit(google.protobuf.Empty) returns (google.protobuf.Empty);

  // Update assigns adds or updates an IP-table.
  rpc Update(telepresence.daemon.Table) returns (google.protobuf.Empty);

  rpc SetManagerInfo(ManagerInfo) returns (google.protobuf.Empty);

  // SetSearch sets a new search path.
  rpc SetDnsSearchPath(Paths) returns (google.protobuf.Empty);
}

message DaemonStatus {
  enum ErrType {
    UNSPECIFIED = 0;
    NOT_STARTED = 1;
    NO_NETWORK = 3;
  }
  ErrType error = 1;
  string dns = 2;
  string fallback = 3;
}

message Paths {
  repeated string paths = 1;
}

message Tables {
  repeated telepresence.daemon.Table tables = 1;
}

message TableName {
  string name = 1;
}

message ManagerInfo {
  int32 grpc_port = 1;
}